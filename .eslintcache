[{"C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\index.js":"1","C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\App.js":"2","C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\Toggle.js":"3","C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\ResultsPage.js":"4","C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\AirportList.ts":"5","C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\Airport.ts":"6","C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\FlightForm.js":"7","C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\Header.js":"8","C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\Button.js":"9","C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\AirportCard.js":"10","C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\AirportService.js":"11"},{"size":193,"mtime":1614039229861,"results":"12","hashOfConfig":"13"},{"size":2278,"mtime":1616353462899,"results":"14","hashOfConfig":"13"},{"size":641,"mtime":1613682917804,"results":"15","hashOfConfig":"13"},{"size":2622,"mtime":1616353413996,"results":"16","hashOfConfig":"13"},{"size":181,"mtime":1613692448663,"results":"17","hashOfConfig":"13"},{"size":1800,"mtime":1613692119707,"results":"18","hashOfConfig":"13"},{"size":4065,"mtime":1616309557012,"results":"19","hashOfConfig":"13"},{"size":471,"mtime":1614043439815,"results":"20","hashOfConfig":"13"},{"size":639,"mtime":1614168588201,"results":"21","hashOfConfig":"13"},{"size":937,"mtime":1616310994631,"results":"22","hashOfConfig":"13"},{"size":1587,"mtime":1616347580319,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"uw7mcp",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\index.js",[],["52","53"],"C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\App.js",[],"C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\Toggle.js",[],["54","55"],"C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\ResultsPage.js",["56","57"],"import React from \"react\"\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport AirportCard from './AirportCard'\r\n\r\n\r\nclass ResultsPage extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state  = {\r\n            seatac: {\r\n                airportName: 'Seattle Tacoma International Airport',\r\n                elevation: 433,\r\n                ident: 'KSEA',\r\n                airportType: 'large_airport',\r\n                municipality: 'Seattle',\r\n                homelink: 'http://www.portseattle.org/seatac/',\r\n                wikipedia: 'https://en.wikipedia.org/wiki/Seattle–Tacoma_International_Airport'\r\n            },\r\n\r\n            denver: {\r\n                airportName: 'Denver International Airport',\r\n                elevation: 5431,\r\n                ident: 'KDEN',\r\n                airportType: 'large_airport',\r\n                municipality: 'Denver',\r\n                homelink: 'http://www.flydenver.com/',\r\n                wikipedia: 'https://en.wikipedia.org/wiki/Denver_International_Airport'\r\n            },\r\n            airports: null\r\n        }\r\n    }\r\n\r\n    randomizeButtonClicked(e) {\r\n\r\n    }\r\n\r\n    backButtonClicked(e) {\r\n\r\n    }\r\n\r\n    selectRandomAirport(currAirport) {\r\n        if (!currAirport) return null;\r\n        \r\n        const min = 1;\r\n        const max = this.props.airports.length;\r\n        const currIndex = this.props.airports.map(e => e.airportId).indexOf(currAirport.airportId);\r\n        var randomInt = currIndex;\r\n\r\n        while (randomInt == currIndex) {\r\n            randomInt = Math.floor(Math.random() * (max - min) + min);\r\n        }\r\n\r\n        return this.props.airports[randomInt];\r\n        \r\n    }\r\n\r\n    render() {\r\n        \r\n        var originAirport = this.props.airports[0];\r\n        var destinationAirport = this.selectRandomAirport(originAirport);\r\n\r\n        if (!originAirport || !destinationAirport) {\r\n            return(<div> Loading... </div>);\r\n        }\r\n\r\n        return ( \r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"text-left\">Departing</h1>\r\n                            {<AirportCard info={originAirport} />}\r\n                        </Col>\r\n\r\n                        <Col>\r\n                            <h1 className=\"text-left\">Arriving</h1>\r\n                            {<AirportCard info={destinationAirport} />}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ResultsPage\r\n","C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\AirportList.ts",[],["58","59"],"C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\Airport.ts",[],"C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\FlightForm.js",["60","61"],"import React from 'react'\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\r\nimport MenuButton from './Button'\r\nimport AirportService from './AirportService'\r\n\r\nclass FlightForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validated: false\r\n     }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.props.onChange(e.target.value, e.target.name);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit();\r\n  }\r\n  \r\n  render() {\r\n    const input = this.props.input; \r\n    \r\n    const departureAirport = input.departureAirport; \r\n    const arrivalAirport = input.arrivalAirport;\r\n    const minRange = input.minRange;\r\n    const maxRange = input.maxRange;\r\n    const allowsSmallAirports = input.allowsSmallAirports;\r\n    const allowsMediumAirports = input.allowsMediumAirports;\r\n    const allowsLargeAirports = input.allowsLargeAirports;\r\n\r\n    console.log(input);\r\n\r\n    return (\r\n      <div>\r\n          <Container>\r\n            <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\r\n              <Form.Group controlId=\"formAirportSelection\">\r\n\r\n              <Form.Label> <h4>Departing</h4></Form.Label>\r\n                <Form.Control \r\n                  type=\"text\" \r\n                  placeholder=\"e.g. KLAX or Los Angeles Intl.\" \r\n                  name=\"departureAirport\"\r\n                  value={departureAirport}\r\n                  onChange={this.handleChange}/>\r\n\r\n                <Form.Text> <h5>— or —</h5> </Form.Text>\r\n\r\n                <Form.Label><h4>Arriving</h4></Form.Label>\r\n                <Form.Control \r\n                  type=\"text\" \r\n                  placeholder=\"e.g. KDEN or Denver Intl.\"\r\n                  name=\"arrivalAirport\"\r\n                  value={arrivalAirport}\r\n                  onChange={this.handleChange}/>\r\n\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formDistanceSelection\">\r\n                <Form.Label><h4>Distance  (in nautical miles)</h4></Form.Label>\r\n                <Row>\r\n                  <Col xs=\"3\">\r\n                    <Form.Label>Min</Form.Label>\r\n                    <Form.Control \r\n                      type=\"text\" \r\n                      // placeholder=\"0\"\r\n                      name=\"minRange\"\r\n                      value={minRange}\r\n                      onChange={this.handleChange} />\r\n                  </Col>\r\n\r\n                  <Col xs=\"3\">\r\n                    <Form.Label> Max</Form.Label>\r\n                    <Form.Control \r\n                      type=\"text\" \r\n                      // placeholder=\"500\"\r\n                      name=\"maxRange\"\r\n                      value={maxRange}\r\n                      onChange={this.handleChange} />\r\n                  </Col>\r\n                </Row>\r\n              </Form.Group>\r\n              \r\n              <Form.Group controlId=\"formAirportSizeSelection\">\r\n                <Form.Label><h4>Airport Size</h4></Form.Label>\r\n                <Form.Check \r\n                  type=\"checkbox\" \r\n                  label=\"Small\" \r\n                  name=\"allowsSmallAirports\"\r\n                  value={allowsSmallAirports} \r\n                  onChange={this.handleChange}/>\r\n\r\n                <Form.Check \r\n                  type=\"checkbox\" \r\n                  label=\"Medium\" \r\n                  name=\"allowsMediumAirports\"\r\n                  value={allowsMediumAirports}\r\n                  onChange={this.handleChange} />\r\n\r\n\r\n                <Form.Check \r\n                  type=\"checkbox\" \r\n                  label=\"Large\" \r\n                  name=\"allowsLargeAirports\"\r\n                  value={allowsLargeAirports}\r\n                  onChange={this.handleChange} />              \r\n                  \r\n              </Form.Group>\r\n\r\n              <Button type=\"submit\"> Generate Flight </Button>\r\n\r\n            </Form>\r\n          </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightForm\r\n","C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\Header.js",[],"C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\Button.js",[],["62","63"],"C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\AirportCard.js",[],"C:\\Users\\bogen\\Documents\\flightplanner frontend\\flight-planner\\src\\AirportService.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":50,"column":26,"nodeType":"76","messageId":"77","endLine":50,"endColumn":28},{"ruleId":"64","replacedBy":"78"},{"ruleId":"66","replacedBy":"79"},{"ruleId":"70","severity":1,"message":"80","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":18},{"ruleId":"70","severity":1,"message":"81","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":22},{"ruleId":"64","replacedBy":"82"},{"ruleId":"66","replacedBy":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],["84"],["85"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["84"],["85"],"'MenuButton' is defined but never used.","'AirportService' is defined but never used.",["84"],["85"],"no-global-assign","no-unsafe-negation"]