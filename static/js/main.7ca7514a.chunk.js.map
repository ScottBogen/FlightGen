{"version":3,"sources":["FlightForm.js","Button.js","Airport.ts","AirportList.ts","Header.js","ResultsPage.js","App.js","index.js"],"names":["FlightForm","React","Component","state","Container","Form","Group","controlId","Label","Control","type","placeholder","Text","Row","Col","xs","Check","label","Button","Airport","airportId","ident","airportType","this","airports","Header","className","App","currentPage","ReactDOM","render","document","getElementById"],"mappings":"sPA2EeA,GCxEUC,IAAMC,U,kDDG7B,aAAe,IAAD,8BACZ,gBACKC,MAAQ,GAFD,E,qDAQZ,OACE,8BAGI,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,uBAAtB,UAUE,eAACF,EAAA,EAAKG,MAAN,eAAa,8CACb,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,mCACtC,eAACN,EAAA,EAAKO,KAAN,eAAY,kDAAZ,OAEA,cAACP,EAAA,EAAKG,MAAN,UAAY,4CACZ,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,iCAKxC,eAACN,EAAA,EAAKC,MAAN,CAAYC,UAAU,wBAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,UAAY,iEACZ,eAACK,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,UACE,cAACV,EAAA,EAAKG,MAAN,kBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,SAGxC,eAACG,EAAA,EAAD,CAAKC,GAAG,IAAR,UACE,cAACV,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,iBAQ5C,eAACN,EAAA,EAAKC,MAAN,CAAYC,UAAU,2BAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,UAAY,gDACZ,cAACH,EAAA,EAAKW,MAAN,CAAYN,KAAK,WAAWO,MAAM,UAClC,cAACZ,EAAA,EAAKW,MAAN,CAAYN,KAAK,WAAWO,MAAM,WAClC,cAACZ,EAAA,EAAKW,MAAN,CAAYN,KAAK,WAAWO,MAAM,aAGpC,cAACC,EAAA,EAAD,CAAQR,KAAK,SAAb,0C,GA7DWT,IAAMC,Y,QEgDhBiB,EAPX,WAAYC,EAAmBC,EAAeC,GAAsB,yBA5CpEF,UAAoB,EA4C+C,KA3CnEC,MAAgB,GA2CmD,KA1CnEC,YAAsB,GA2ClBC,KAAKH,UAAYA,EACjBG,KAAKF,MAAQA,EACbE,KAAKD,YAAcA,GCzCZE,EAFA,CAHA,IAAIL,EAAQ,EAAG,SAAU,KAC5B,IAAIA,EAAQ,EAAG,MAAO,MCsBlBM,GCrBUxB,IAAMC,U,kDDE5B,aAAe,IAAD,8BACV,gBACKC,MAAQ,GAFH,E,qDASV,OACI,8BACI,cAACC,EAAA,EAAD,UACA,oBAAIsB,UAAU,wBAAd,qC,GAdKzB,IAAMC,YE2BZyB,E,kDAlBb,aAAe,IAAD,8BACZ,gBACKxB,MAAQ,CACXyB,YAAa,cAAC,EAAD,KAHH,E,qDAQZ,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,W,GAZU3B,IAAMC,W,MCPxB2B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7ca7514a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button, Col, Container, Form, FormGroup, FormLabel, Nav, Row } from 'react-bootstrap';\r\nimport MenuButton from './Button'\r\n\r\nclass FlightForm extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {}\r\n  }\r\n\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n          {/* <Nav style={{backgroundColor: '#f1f1f1'}}> */}\r\n\r\n          <Container>\r\n            <Form>\r\n              <Form.Group controlId=\"formAirportSelection\">\r\n\r\n                {/* <Form.Label> <h4>Airport</h4></Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"e.g. KLAX or Los Angeles Intl.\"/>\r\n                \r\n\r\n                <MenuButton message=\"Arrivals\"/>\r\n                <MenuButton message=\"Departures\"/>\r\n                <MenuButton message=\"Random\"/> */}\r\n\r\n                <Form.Label> <h4>Departing</h4></Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"e.g. KLAX or Los Angeles Intl.\"></Form.Control>\r\n                <Form.Text> <h5>— or —</h5> </Form.Text>\r\n\r\n                <Form.Label><h4>Arriving</h4></Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"e.g. KDEN or Denver Intl.\"></Form.Control>\r\n                \r\n\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formDistanceSelection\">\r\n                <Form.Label><h4>Distance  (in nautical miles)</h4></Form.Label>\r\n                <Row>\r\n                  <Col xs=\"3\">\r\n                    <Form.Label>Min</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"0\"></Form.Control>\r\n                  </Col>\r\n\r\n                  <Col xs=\"3\">\r\n                    <Form.Label> Max</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"500\"></Form.Control>\r\n                  </Col>\r\n\r\n                </Row>\r\n\r\n              </Form.Group>\r\n\r\n\r\n              <Form.Group controlId=\"formAirportSizeSelection\">\r\n                <Form.Label><h4>Airport Size</h4></Form.Label>\r\n                <Form.Check type=\"checkbox\" label=\"Small\" />\r\n                <Form.Check type=\"checkbox\" label=\"Medium\" />\r\n                <Form.Check type=\"checkbox\" label=\"Large\" />\r\n              </Form.Group>\r\n\r\n              <Button type=\"submit\"> Generate Flight </Button>\r\n\r\n            </Form>\r\n          </Container>\r\n          {/* </Nav> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightForm","import React from 'react'\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass MenuButton extends React.Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {};\r\n    }\r\n\r\n\r\n    render() {\r\n        const mystyle = {\r\n            color: \"white\",\r\n            backgroundColor: \"DodgerBlue\",\r\n            padding: \"10px\",\r\n            fontFamily: \"Arial\",\r\n            padding: \"100px\"\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Button type=\"button\" style={mystyle}>{this.props.message}</Button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n} \r\n\r\nexport default MenuButton","class Airport {\r\n    airportId: number = 0;\r\n    ident: string = \"\";\r\n    airportType: string = \"\";\r\n    // airportName: string;\r\n    // latitudeDeg: number;\r\n    // longitudeDeg: number;\r\n    // elevation: number;\r\n    // continent: string;\r\n    // isoCountry: string;\r\n    // isoRegion: string;\r\n    // municipality: string;\r\n    // scheduledService: string;\r\n    // gpsCode: string;\r\n    // iataCode: string;\r\n    // localCode: string;\r\n    // homeLink: string;\r\n    // wikipediaLink: string;\r\n    // keywords: string;\r\n\r\n    // constructor(airportId: number, ident: string, airportType: string, airportName:, latitudeDeg,\r\n    //     longitudeDeg, elevation, continent, isoCountry, isoRegion,\r\n    //     municipality, scheduledService, gpsCode, iataCode, localCode,\r\n    //     homeLink, wikipediaLink, keywords) {\r\n    //     this.airportId = airportId;\r\n    //     this.ident = ident;\r\n    //     this.airportType = airportType;\r\n    //     this.airportName = airportName;\r\n    //     this.latitudeDeg = latitudeDeg;\r\n    //     this.longitudeDeg = longitudeDeg;\r\n    //     this.elevation = elevation;\r\n    //     this.continent = continent;\r\n    //     this.isoCountry = isoCountry;\r\n    //     this.isoRegion = isoRegion;\r\n    //     this.municipality = municipality;\r\n    //     this.scheduledService = scheduledService;\r\n    //     this.gpsCode = gpsCode;\r\n    //     this.iataCode = iataCode;\r\n    //     this.localCode = localCode;\r\n    //     this.homeLink = homeLink;\r\n    //     this.wikipediaLink = wikipediaLink;\r\n    //     this.keywords = keywords;\r\n    // }\r\n\r\n\r\n    constructor(airportId: number, ident: string, airportType: string) {\r\n        this.airportId = airportId;\r\n        this.ident = ident;\r\n        this.airportType = airportType;\r\n    }\r\n}\r\n\r\nexport default Airport","import Airport from './Airport'\r\n\r\nconst seaTac = new Airport(1, \"seatac\", \"1\");\r\nconst lax = new Airport(2, \"lax\", \"2\");\r\n\r\nlet airports = [seaTac, lax];\r\n\r\nexport default airports","import React from \"react\"\r\nimport { Container } from \"react-bootstrap\"\r\n\r\n\r\nclass Header extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                <h1 className=\"display-3 text-center\"> FlightGen Beta</h1> \r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default  Header","import React from \"react\"\r\nimport Airport from './Airport'\r\nimport airports from './AirportList'\r\n\r\nclass ResultsPage extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state  = {\r\n            error: null,\r\n            resultReceived: false,\r\n            airportItems: []\r\n        }\r\n\r\n        this.receiveAirports = this.receiveAirports.bind(this);\r\n    }\r\n\r\n    receiveAirports() {\r\n        this.state.airportItems = airports;\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div>\r\n                <p> Hello world </p>\r\n                <p> Airports: </p>\r\n                {this.state.airportItems.length}\r\n                <div>\r\n                <button onClick={this.receiveAirports}></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ResultsPage\r\n","import React from 'react'\nimport FlightForm from './FlightForm'\nimport ResultsPage from './ResultsPage'\nimport Header from './Header'\n\n/* \n  Main page: MainView\n  When the form is successfully submitted, change this view to the results page, where values will be temporary until filled in by the response\n  Instead of having a whole component dedicated just to loading, maybe try having a boolean to see if a response has been generated yet, and if false then show loading icon\n*/\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = { \n      currentPage: <FlightForm/> \n    }\n  }\n\n  render () {\n    return (\n      <div>\n        <Header/>\n        <FlightForm/>\n      </div>\n    \n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}